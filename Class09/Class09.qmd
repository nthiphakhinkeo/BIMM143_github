---
title: "Class09"
author: Nicholas Thiphakhinkeo A17686679
format: pdf
---

# Read File
```{r}
pdbdb <- read.csv("Data Export Summary.csv")
```

# Q1: What percentage of structures in the PDB are solved by X-Ray and Electron Microscopy.
```{r}
pdbdb$Total
```
# Remove Commas Convert to Numerics
```{r}
as.numeric( sub(",","", pdbdb$Total) )
```
# Set as Function for Whole Table and Future Tables
```{r}
x <- pdbdb$Total
as.numeric( sub(",","",x))
```
```{r}
comma2numeric <- function(x) {
  as.numeric( sub(",","", x))
}
```
# Test
```{r}
comma2numeric(pdbdb$X.ray)
```
```{r}
apply(pdbdb, 2, comma2numeric)
```
# Try different Read/Import Function
```{r}
library(readr)
pdbdb <- read_csv("Data Export Summary.csv")
```
```{r}
sum(pdbdb$Total)
```
```{r}
sum(pdbdb$`X-ray`)/sum(pdbdb$Total) * 100
```

```{r}
sum(pdbdb$EM)/sum(pdbdb$Total) * 100
```
# Q2: What proportion of structures in the PDB are protein?
```{r}
pdbdb$Total[1]/ sum(pdbdb$Total) * 100
```
# Q3: Type HIV in the PDB website search box on the home page and determine how many HIV-1 protease structures are in the current PDB?
```{r}

```

Bio3D
```{r}
library(bio3d)
pdb <- read.pdb("1hsg")
pdb
```
> Q7. How many amino acid residues are there in this pdb object?

```{r}
sum(pdb$calpha)
length(pdbseq(pdb))
```
> Q8: Name one of the two non-protein residues

HOH, MK1

> Q9: How many protein chains are in this structure?

2
---------------

```{r}
attributes(pdb)
head(pdb$atom)
adk <- read.pdb("6s36")
```

# Flexibility Prediction
```{r}
m <- nma(adk)
```

```{r}
plot(m)
```


> Q10.Which of the packages above is found only on BioConductor and not CRAN? 

MSA Package

> Q11. Which of the above packages is not found on BioConductor or CRAN?:



> Q12. T/F? Functions from the devtools package can be used to install packages from GitHub and BitBucket?

True

```{r}
library(bio3d)
aa <- get.seq("1ake_A")
```


> Q13. How many amino acids are in this sequence, i.e. how long is this sequence?


# Blast Search
```{r}
# b <- blast.pdb(aa)
```
# Plot summar of Search Results
```{r}
# hits <- plot(b)
```
# List out some 'top hits'
```{r}
# head(hits$pdb.id)
```

```{r}
hits <- NULL
hits$pdb.id <- c('1AKE_A','6S36_A','6RZE_A','3HPR_A','1E4V_A','5EJE_A','1E4Y_A','3X2S_A','6HAP_A','6HAM_A','4K46_A','3GMT_A','4PZL_A')
```
# Download releated PDB files
```{r}
files <- get.pdb(hits$pdb.id, path="pdbs", split=TRUE, gzip=TRUE)
```
# Align releated PDBs
```{r}
pdbs <- pdbaln(files, fit = TRUE, exefile="msa")
```
# Vector containing PDB codes for figure axis
```{r}
ids <- basename.pdb(pdbs$id)
```
# Draw schematic alignment
```{r}
#plot(pdbs, labels=ids)
```
# Annotating PDB Structures
```{r}
anno <- pdb.annotate(ids)
unique(anno$source)
anno
```
# Perform PCA
```{r}
pc.xray <- pca(pdbs)
#plot(pc.xray, pc.axes = c(1,2))
```
# Calculate RMSD
```{r}
rd <- rmsd(pdbs)
```
# Structure-based Clustering
```{r}
hc.rd <- hclust(dist(rd))
grps.rd <- cutree(hc.rd, k=3)

#plot(pc.xray, 1:2, col="grey50", bg=grps.rd, pch=21, cex=1)
```
# Visualize first principal component
```{r}
pc1 <- mktrj(pc.xray, pc=1, file="pc_1.pdb")
```
#Plotting results with ggplot2
```{r}
library(ggplot2)
library(ggrepel)

df <- data.frame(PC1=pc.xray$z[,1], 
                 PC2=pc.xray$z[,2], 
                 col=as.factor(grps.rd),
                 ids=ids)

p <- ggplot(df) + 
  aes(PC1, PC2, col=col, label=ids) +
  geom_point(size=2) +
  geom_text_repel(max.overlaps = 20) +
  theme(legend.position = "none")
p
```

